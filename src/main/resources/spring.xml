<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--<bean id ="student" class="org.example.Student" scope="prototype">
        Prototype  will create object  depends on the reference.
        By Default scope is Singleton
    -->
    <bean id ="student" class="org.example.Student"  autowire="byType">

        <!--
        Ques: How it will set the vale
        Ans.: First it will create the object then call to setter method and set the value
        -->

        <!--*********** Getter Setter Injection******************-->

       <!-- <property name="age" value="21"> </property>
        &lt;!&ndash;Here we use ref for reference type dependency injection&ndash;&gt;
        <property name="lap" ref="lap1"> </property>
        -->

        <!--*******Constructor Injection****************-->

        <!--<constructor-arg value ="21"/>
        <constructor-arg ref = "lap1"/>-->

        <!--in this  Scenario we will get error if we have multiple parameter with the same data type
            to overcome this we will use indexing   -->

      <!-- <constructor-arg index ="0" value ="21"/>
        <constructor-arg index ="1" value ="500000"/>
        <constructor-arg ref = "lap1"/>-->

        <property name="age" value="21"/>

        <!--Auto wire will take care for this property-->
<!--
        <property name="com" ref="com"/>
-->
    </bean>
    <bean id ="com" class="org.example.Laptop" primary="true" > </bean>
    <!--Here lazy-init will decide when object get created ,
        when ever required then object will get created
     -->
    <bean id ="com1" class="org.example.Desktop" lazy-init="true"> </bean>


</beans>