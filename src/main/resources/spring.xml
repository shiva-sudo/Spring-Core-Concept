<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

    <!--<bean id ="student" class="org.example.Student" scope="prototype">

        Prototype  will create object  depends on the reference.
        By Default scope is Singleton
    -->


    <!--<bean id ="student" class="org.example.Student"  autowire="byType">

        &lt;!&ndash;
        Ques: How it will set the vale
        Ans.: First it will create the object then call to setter method and set the value
        &ndash;&gt;

        &lt;!&ndash;*********** Getter Setter Injection******************&ndash;&gt;

        &lt;!&ndash; <property name="age" value="21"> </property>
        &lt;!&ndash;Here we use ref for reference type dependency injection&ndash;&gt;
        <property name="lap" ref="lap1"> </property>
        &ndash;&gt;

        &lt;!&ndash;*******Constructor Injection****************&ndash;&gt;

        &lt;!&ndash;<constructor-arg value ="21"/>
        <constructor-arg ref = "lap1"/>&ndash;&gt;

        &lt;!&ndash;in this  Scenario we will get error if we have multiple parameter with the same data type
            to overcome this we will use indexing   &ndash;&gt;

        &lt;!&ndash; <constructor-arg index ="0" value ="21"/>
        <constructor-arg index ="1" value ="500000"/>
        <constructor-arg ref = "lap1"/>&ndash;&gt;

        <property name="age" value="21"/>

        &lt;!&ndash;Auto wire will take care for this property&ndash;&gt;
        &lt;!&ndash;
                <property name="com" ref="com"/>
        &ndash;&gt;
        &lt;!&ndash;********************Lazy Bean concept************&ndash;&gt;
        </bean>
        <bean id ="com" class="org.example.Laptop" primary="true" > </bean>

        &lt;!&ndash;
           Here lazy-init will decide when object get created ,
           when ever required then object will get created
         &ndash;&gt;
        <bean id ="com1" class="org.example.Desktop" lazy-init="true"> </bean>-->


        <!--*******inner Bean Concept**********-->
        <!--
            inner Bean define the bean scope for a particular bean
            in the  below statement the object can be used only for Student bean
        -->
        <bean id ="student" class="org.example.Student"  autowire="byType">
        <property name="com">
            <bean id ="com" class="org.example.Laptop" primary="true" > </bean>
        </property>

        </bean>


</beans>